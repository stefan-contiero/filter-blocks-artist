.gallery
  .gallery__sidebar
    .tokens__count
      small.legend Displaying
      br
      span {filtered.length} of {tokens.length}
      +if('active.filters.length')
        span.clear-filters &nbsp;—&nbsp;
          span(
            on:click="{clearAllFilters}",
          ) Clear all filters
      +if('mode === "stats" || tokens[0].rank')
        .sorting
          small.legend Sort by
          .button-group
            button(class="{sortBy === 'tokens' ? 'active' : ''}", on:click="{setSort}", data-sort="tokens") Token #
            button(class="{sortBy === 'rare' ? 'active' : ''}", on:click="{setSort}", data-sort="rare") Most rare
            button(class="{sortBy === 'common' ? 'active' : ''}", on:click="{setSort}", data-sort="common") Most common
      label.multiselect
        input(type="checkbox", bind:checked="{multiselect}")
        small multiple traits selection
    ul.feature__list
      +each('Object.entries(features) as [feature, values]')
        li.feature
          .feature__title(
            class="{`${active[feature].length ? 'active' : ''} ${opened.feature === feature ? 'opened' : ''}`}",
            on:click="{toggleOpenFeature}",
            data-feature="{feature}"
          )
            .feature__title__text
              span {feature}
              br
              +if('active[feature].length')
                small
                  span.elements {active[feature].join(', ')}
                  span &nbsp;—&nbsp;
                  span.clear(
                    on:click="{clearFeatureFilter}",
                    data-feature="{feature}"
                  ) Clear
                +else()
                  small All
            .feature__title__arrow {opened.feature === feature ? '▲' : '▼'}
          +if('opened.feature === feature')
            ul.value__list
              +each('Object.entries(values) as [name, value]')
                li.value(
                  class="{`${value.active ? 'active' : ''} ${opened.totals[name] === 0 ? 'disabled' : ''}`}",
                  on:click="{toggleFilter}",
                  data-feature="{feature}", 
                  data-name="{name}",
                )
                  span.value__separator └
                  span.value__title {name}
                    span.value__count &nbsp;—&nbsp;
                      small {opened.totals[name]} items ({((opened.totals[name] / tokens.length) * 100).toFixed(2)}%)
  ul.gallery__tokens(class="gallery__tokens--{mode}")
    +each('paginate(filtered, currentPage) as token')
      li
        a(href="/token/{token.tokenId}")
          +if('mode === "viewer"')
            Image(src="/{projectFolder}/image/{token.hash}.{imageExtension}", alt="Token #{token.tokenId}", ratio="{ratio}")
            small \#{token.tokenId}
            +if('token.rank')
              small.rarity Rarity \#{token.rank}
            +else()
              .info
                div
                  h4 Token \#{token.tokenId}
                  small {token.hash}
                small.tag Rarity Rank \#{token.rank}
              ul
                +each('Object.entries(token.features) as [feature, name]')
                  li
                    b {feature}: 
                    span {name}
  .gallery__tokens__pagination
    .pages
      .a(on:click="{setPage}", data-page="{currentPage - 1}", class="{currentPage === 1 ? 'disabled' : ''}") &lt;
      +if('pages[0] !== 1')
        .a(on:click="{setPage}", data-page="1") 1
        span ...
      +each('pages as page')
        .a(class="{page === currentPage ? 'active' : ''}", on:click="{setPage}", data-page="{page}") {page}
      +if('pages[pages.length - 1] !== lastPage')
        span ...
        .a(on:click="{setPage}", data-page="{lastPage}") {lastPage}
      .a(on:click="{setPage}", data-page="{currentPage + 1}", class="{currentPage === lastPage ? 'disabled' : ''}") &gt;

